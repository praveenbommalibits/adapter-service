server:
  port: 8080

# Application Configuration
spring:
  application:
    name: adcb-adapter-service
  boot:
    admin:
      client:
        enabled: false
  profiles:
    active: dev

adapter:
  templates:
    path: "classpath:/adapter-templates/"
    cache:
      enabled: true
      ttl-minutes: 60

  services:
    user-api:
      serviceName: "user-api"
      protocol: "REST_JSON"
      endpointUrl: "http://localhost:8090/downstream/api/users/{userId}"
      httpMethod: "GET"
      requestTemplate: "user-request.json"
      responseTemplate: "user-response.json"
      headers:
        Accept: "application/json"
        Content-Type: "application/json"
      auth:
        type: "API_KEY"
        strategy: "HEADER"
        keyName: "X-API-Key"
        tokenSource: "test-api-key-12345"
      resilience:
        circuitBreaker:
          enabled: true
          failureRateThreshold: 50.0
          waitDurationInOpenStateMs: 30000
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
        retry:
          enabled: true
          maxAttempts: 3
          strategy: "EXPONENTIAL_BACKOFF"
          initialInterval: 1000
          multiplier: 2.0
          maxInterval: 10000
          retryableExceptions:
            - "org.springframework.web.reactive.function.client.WebClientException"
            - "java.net.ConnectException"
        timeouts:
          connectionTimeout: 5000
          readTimeout: 10000
          totalTimeout: 15000

    user-soap-api:
      serviceName: "user-soap-api"
      protocol: "SOAP"
      endpointUrl: "http://localhost:8090/downstream/soap"
      httpMethod: "POST"
      requestTemplate: "user-soap-request.xml"
      responseTemplate: "user-soap-response.json"
      headers:
        Content-Type: "text/xml; charset=utf-8"
        SOAPAction: ""
      auth:
        type: "NONE"  # No authentication needed for this example
      resilience:
        circuitBreaker:
          enabled: true
          failureRateThreshold: 50.0
          waitDurationInOpenStateMs: 30000
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
        retry:
          enabled: true
          maxAttempts: 3
          strategy: "EXPONENTIAL_BACKOFF"
          initialInterval: 1000
          multiplier: 2.0
          maxInterval: 10000
          retryableExceptions:
            - "org.springframework.ws.client.WebServiceIOException"
            - "java.net.ConnectException"
        timeouts:
          connectionTimeout: 5000
          readTimeout: 10000
          totalTimeout: 15000

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    org.adcb.adapter: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
    reactor.netty.channel.FluxReceive: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
